
                    var teq = "test" + 10
                    var argv [10]int = a[1] + 10
                    var a [5]Point;
                var circles = [3]Circle{
                            Circle{radius: 1.0, center: Point{x: 0, y: 0}},
                            Circle{radius: 2.0, center: Point{x: 1, y: 1}},
                            Circle{radius: 3.0, center: Point{x: 2, y: 2}}};
                var pole = [1023]Cirlce{"Hello", {"World", {"AQUA"}, "PKP", {1,2,3,45}}, {1,2,3,4,5,67,8,9}}
                var testKimJongUn = NorthKorea{
                    name: "Mr Kim Jong Un",
                    ability: "Like Rocket"}

                    var teq = "test" + 10
                    var argv [10]int = a[1] + 10
                    var a [5]Point;
                const circles = [3]Circle{
                            Circle{radius: 1.0, center: Point{x: 0, y: 0}},
                            Circle{radius: 2.0, center: Point{x: 1, y: 1}},
                            Circle{radius: 3.0, center: Point{x: 2, y: 2}}};
                const pole = [1023]Cirlce{"Hello", {"World", {"AQUA"}, "PKP", {1,2,3,45}}, {1,2,3,4,5,67,8,9}}
                const testKimJongUn = NorthKorea{
                    name: "Mr Kim Jong Un",
                    ability: "Like Rocket"}

        func foo(a, b int, c float) {
            x := 10

            if (x > 10) { 
                x := 10

                if (b) {
                    var c = 5
                } else {
                    b := true
                }
            } else {
                x := 20
            }
        }
        func zoo() {
            t := 1000 + 30 -20 + 3 -a.b.c[20] || 4 && 5
            q := Cal{
                left: 10,
                right: 20}

            teqz:= [3]Circle{
                Circle{radius: 1.0, center: Point{x: 0, y: 0}},
                Circle{radius: 2.0, center: Point{x: 1, y: 1}},
                Circle{radius: 3.0, center: Point{x: 2, y: 2}}}
        }
        func (z Z) test() {}
        func (z Z) test() int {}    

        type Point struct {
            z int
            tdwduwhu idjwajjdwj
            todo [10]int
        }

         type Calculator interface {
            Add(x, y int) int;
            Subtract(a, b float, c int) float;
            Reset()
            SayHello(name string)
        }
        